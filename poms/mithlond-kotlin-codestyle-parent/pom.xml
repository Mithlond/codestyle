<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- +=============================================== -->
    <!-- | Section 1:  Project information                -->
    <!-- +=============================================== -->
    <parent>
        <groupId>se.mithlond.codestyle.poms</groupId>
        <artifactId>mithlond-codestyle-parent</artifactId>
        <version>2.0.1-SNAPSHOT</version>
        <relativePath>../mithlond-codestyle-parent</relativePath>
    </parent>

    <groupId>se.mithlond.codestyle.poms</groupId>
    <artifactId>mithlond-kotlin-codestyle-parent</artifactId>
    <version>2.0.1-SNAPSHOT</version>
    <name>${project.artifactId}</name>
    <packaging>pom</packaging>
    <url>${site.top.url}/${path.in.reactor}</url>
    <description>Mithlond Kotlin Codestyle: Artifact POM Parent.</description>

    <properties>
        <path.in.reactor>poms/mithlond-kotlin-codestyle-parent</path.in.reactor>

        <!-- Kotlin constants -->
        <kotlin.version>1.2.21</kotlin.version>
        <kotlin.plugin>jpa</kotlin.plugin>
        <dokka.version>0.9.15</dokka.version>
    </properties>


    <!-- +=============================================== -->
    <!-- | Section 2:  Dependency (management) settings   -->
    <!-- +=============================================== -->
    <dependencyManagement>
        <dependencies>
            <!--
                Include the standard Kotlin libraries.
            -->
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib-jdk8</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-reflect</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!--
            Include the standard Kotlin libraries.
        -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>
    </dependencies>

    <!-- +=============================================== -->
    <!-- | Section 3:  Build settings                     -->
    <!-- +=============================================== -->
    <build>

        <sourceDirectory>src/main/kotlin</sourceDirectory>
        <testSourceDirectory>src/test/kotlin</testSourceDirectory>

        <pluginManagement>
            <plugins>

                <!--
                    Ensure that the kotlin-maven-plugin uses the standard src/main/kotlin
                    and src/test/kotlin directories.

                    Why:  Ensures standard placement for Kotlin sources.
                    Used: Standard lifecycle, mvn compile / test-compile.
                -->
                <plugin>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <version>${kotlin.version}</version>
                    <configuration>
                        <plugin>${kotlin.plugin}</plugin>
                        <jvmTarget>${jdk.version}</jvmTarget>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.jetbrains.kotlin</groupId>
                            <artifactId>kotlin-maven-noarg</artifactId>
                            <version>${kotlin.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <!--
                    Use the Dokka plugin to document Kotlin code, as the
                    standard JavaDoc Doclet does not work.

                    Why:  Ensures javadoc for Kotlin sources.
                    Used: Standard lifecycle, mvn pre-site
                -->
                <plugin>
                    <groupId>org.jetbrains.dokka</groupId>
                    <artifactId>dokka-maven-plugin</artifactId>
                    <version>${dokka.version}</version>
                    <configuration>
                        <!-- Used for linking to JDK, default: 6 -->
                        <jdkVersion>8</jdkVersion>

                        <!--
                            Output format - one of the following:
                            a) html - minimalistic html format used by default
                            b) javadoc - Dokka mimic to javadoc
                            c) html-as-java - as html but using java syntax
                            d) markdown - Markdown structured as html
                            f) gfm - GitHub flavored markdown
                            g) jekyll - Jekyll compatible markdown
                            h) kotlin-website* - internal format used for documentation on kotlinlang.org
                        -->
                        <outputFormat>javadoc</outputFormat>

                        <!-- Include documentation link to kotlin-stdlib -->
                        <noStdlibLink>false</noStdlibLink>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>

            <!--
                Use the Dokka plugin to document Kotlin code, as the
                standard JavaDoc Doclet does not work.

                Why:  Ensures javadoc for Kotlin sources.
                Used: Standard lifecycle, mvn pre-site
            -->
            <!-- plugin>
                <groupId>org.jetbrains.dokka</groupId>
                <artifactId>dokka-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>dokka</goal>
                            <goal>javadoc</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin -->

            <!--
                Ensure that the kotlin-maven-plugin uses the standard src/main/kotlin
                and src/test/kotlin directories.

                Why:  Ensures standard placement for Kotlin sources.
                Used: Standard lifecycle, mvn compile / test-compile.
            -->
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
                Ensure that the compiler plugin ignores the Java directories.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <!--
                        Replacing default-compile as it is treated specially by maven
                     -->
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <!--
                        Replacing default-testCompile as it is treated specially by maven
                     -->
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>java-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!-- +=============================================== -->
    <!-- | Section 4:  External systems                   -->
    <!-- +=============================================== -->

    <!--
        Compensate for Maven standard variable extrapolation.
        Git requires steady URLs (... but Subversion requires path extrapolation, hence the problem).
     -->
    <distributionManagement>
        <site>
            <id>github</id>
            <url>${distroManagement.url}</url>
        </site>
    </distributionManagement>

    <scm>
        <connection>${scm.connection.url}</connection>
        <developerConnection>${scm.devConnection.url}</developerConnection>
        <url>${scm.url}</url>
        <tag>mithlond-codestyle-1.6.0</tag>
    </scm>
</project>
